function pageLoadListeners(){for(var e=document.getElementsByClassName("story-button"),t=0;t<e.length;t++)e[t].classList.contains("previous-button")?e[t].addEventListener("click",showPreviousSlide):e[t].classList.contains("next-button")&&e[t].addEventListener("click",showNextSlide)}function createSlideshowAttributes(){for(var e=document.getElementsByClassName("story-container"),t=0;t<e.length;t++){var n=e[t].children.length;console.log(n),e[t].setAttribute("data-number-of-slides",n),e[t].setAttribute("data-current-slide",0)}}function showPreviousSlide(e){var t=this.parentElement.children[0],n=t.dataset.currentSlide;n-=0,n--,console.log(n);var s=t.dataset.numberOfSlides;s-=0,t.setAttribute("data-current-slide",n);var i=this.parentElement.children[2];0===n&&(this.style.display="none"),n<s&&(i.style.display="inline")}function showNextSlide(e){var t=this.parentElement.children[0],n=t.dataset.currentSlide;n-=0,n++;var s=t.dataset.numberOfSlides;s-=0,t.setAttribute("data-current-slide",n);var i=t.parentElement.childNodes[3];n==s-1&&(this.style.display="none"),n>0&&(i.style.display="initial")}function changeSlide(e){var t=document.documentElement.clientWidth,n=(e.dataset.numberOfSlides,e.dataset.currentSlide),s=t*n*-1;e.style.left=s}function repositionSlideshows(){for(var e=document.getElementsByClassName("story-container"),t=0;t<e.length;t++)changeSlide(e[t])}pageLoadListeners(),$(window).ready(function(){createSlideshowAttributes()});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
